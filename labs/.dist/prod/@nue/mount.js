var F=((g)=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(g,{get:(f,y)=>(typeof require!=="undefined"?require:f)[y]}):g)(function(g){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+g+'" is not supported')});async function H(g){const f=document.querySelector('[name="nue:components"]')?.getAttribute("content");if(!f)return[];const y=[];for(let q of f.split(" ")){if(q==g)q+=`?${++G}`;const{lib:k}=await import(q);if(k)y.push(...k)}return y}async function D(g){const f=document.querySelectorAll("[is]"),y=f[0]?await H(g):[];if(!y[0])return;const{createApp:q}=await import("./nue.js");for(let k of[...f]){const v=k.getAttribute("is"),B=k.nextElementSibling,E=B?.type=="application/json"?JSON.parse(B.textContent):{},C=y.find((w)=>w.name==v);if(C){const w=q(C,E,y).mount(k);z.push(w)}else if(customElements.get(v));else console.error(`Web or Nue component not fouind: "${v}"`)}}async function J(){z.forEach((g)=>g.unmount()),z=[]}var z=[],G=0;addEventListener("route",D);addEventListener("DOMContentLoaded",D);export{J as unmountAll,D as mountAll};
